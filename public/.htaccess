# =============================================================================
# CitOmni — PUBLIC ROOT (DEV)
#
# PURPOSE
#   Development front controller for CitOmni apps served from /public.
#   - Mirror routing behavior from prod/stage with dev-friendly defaults.
#   - Serve existing files directly; route everything else to index.php.
#   - Add “noindex, no-cache” headers for fast iteration and privacy.
#
# THREAT MODEL
#   - Prevent exposure of sensitive files under /public (e.g., .env, composer.*).
#   - Preserve Authorization headers across proxies/FPM.
#   - Disable directory listing and MultiViews content-negotiation surprises.
#   - Keep site functional on hosts without mod_rewrite (fallback).
#
# DEPENDENCIES
#   - mod_rewrite recommended (temporary 302 redirects if you enable HTTPS/WWW).
#   - mod_headers/mod_brotli/mod_deflate used when available.
#   - Honors X-Forwarded-Proto if you enable HTTPS canonicalization for local TLS.
# =============================================================================


# -----------------------------------------------------------------------------
# 1) INDEX & DIRECTORY OPTIONS
#    WHY: Ensure PHP front controller is the primary index and avoid listings
#         or MultiViews content negotiation surprises.
# -----------------------------------------------------------------------------
DirectoryIndex index.php

# WHEN: Enable only if your host needs it (symlinked asset dirs, etc.)
# Options FollowSymlinks

# Disable directory listing
Options -Indexes

# Disable MultiViews (e.g., prevent /about matching /about.php)
<IfModule mod_negotiation.c>
	Options -MultiViews
</IfModule>


# -----------------------------------------------------------------------------
# 2) FRONT CONTROLLER & DEV CANONICALIZATION (mod_rewrite)
#    WHY: Support subdir installs, preserve auth headers, deny internal paths,
#         and route all non-files to index.php. HTTPS/WWW redirects remain
#         commented for flexible local setups (enable when needed).
# -----------------------------------------------------------------------------
<IfModule mod_rewrite.c>
	RewriteEngine On

	# 2.1) HTTPS canonicalization (TEMP 302)
	#      WHEN: Uncomment to test HTTPS locally/behind a proxy.
	# RewriteCond %{HTTPS} !=on
	# RewriteCond %{HTTP:X-Forwarded-Proto} !https
	# RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [R=302,L]

	# 2.2) WWW canonicalization (TEMP 302, optional)
	#      WHEN: Uncomment if you need to test www. behavior in dev.
	# RewriteCond %{HTTP_HOST} !^www\. [NC]
	# RewriteRule ^ https://www.%{HTTP_HOST}%{REQUEST_URI} [R=302,L]

	# 2.3) Deny access to internal core path under /public (2nd barrier)
	#      WHY: Protect static framework assets if present at /public/citomni/.
	RewriteRule ^citomni/ - [F,L]

	# 2.4) Auto-detect base for subdir installs
	#      WHY: Allows clean URLs when the app is deployed under a subfolder.
	RewriteCond %{REQUEST_URI}::$1 ^(/.+)/(.*)::\2$
	RewriteRule ^(.*) - [E=BASE:%1]

	# 2.5) Preserve Authorization header
	#      WHY: Some PHP-FPM/CGI setups drop it; expose it to the app via env.
	RewriteCond %{HTTP:Authorization} .
	RewriteRule ^ - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]

	# 2.6) Redirect /index.php to clean URL (TEMP 302 in dev)
	#      WHY: Avoid duplicate content; prefer canonical “pretty” URLs.
	RewriteCond %{ENV:REDIRECT_STATUS} ^$
	RewriteRule ^index\.php(?:/(.*)|$) %{ENV:BASE}/$1 [R=302,L]

	# 2.7) Serve existing files/directories directly (fast path for assets)
	RewriteCond %{REQUEST_FILENAME} -f [OR]
	RewriteCond %{REQUEST_FILENAME} -d
	RewriteRule ^ - [L]

	# 2.8) Front controller: route everything else to index.php
	RewriteRule ^ %{ENV:BASE}/index.php [L]
</IfModule>


# -----------------------------------------------------------------------------
# 3) FALLBACK WHEN mod_rewrite IS UNAVAILABLE
#    WHY: Keep the site functional on constrained hosts (temporary redirect).
# -----------------------------------------------------------------------------
# Fallback if mod_rewrite is not available: temporary redirect root → index.php
<IfModule !mod_rewrite.c>
	<IfModule mod_alias.c>
		RedirectMatch 307 ^/$ /index.php/
	</IfModule>
</IfModule>


# -----------------------------------------------------------------------------
# 4) SECURITY & DEV ITERATION HEADERS
#    WHY: Baseline protections + discourage indexing + aggressive no-cache for DX.
#    NOTE: These headers make changes visible immediately during development.
# -----------------------------------------------------------------------------
<IfModule mod_headers.c>
	Header always set X-Content-Type-Options "nosniff"
	Header always set X-Frame-Options "SAMEORIGIN"
	Header always set Referrer-Policy "strict-origin-when-cross-origin"
	Header always set Permissions-Policy "geolocation=(), microphone=(), camera=()"

	# Dev: discourage indexing (some teams point dev at public subdomains)
	Header always set X-Robots-Tag "noindex, nofollow, noarchive"

	# Dev: kill caching aggressively so changes are visible immediately
	Header always set Cache-Control "no-store, no-cache, must-revalidate, max-age=0"
	Header always set Pragma "no-cache"
	Header always set Expires "0"
</IfModule>


# -----------------------------------------------------------------------------
# 5) BLOCK SENSITIVE FILES UNDER /public
#    WHY: Prevent accidental exposure of configs, archives, locks, etc.
# -----------------------------------------------------------------------------
<FilesMatch "(?i)\.(env|log|sql|sqlite|bak|bck|old|dist|ini|phar|lock|swp|tmp|temp|orig|rej|patch|diff|cfg|crt|key|pem|ds_store)$">
	<IfModule mod_authz_core.c>
		Require all denied
	</IfModule>
	<IfModule !mod_authz_core.c>
		Deny from all
	</IfModule>
</FilesMatch>
<FilesMatch "(?i)^(composer\.(json|lock)|package\.json|yarn\.lock|pnpm-lock\.yaml|\.gitignore|\.gitattributes|\.htaccess|\.htpasswd)$">
	<IfModule mod_authz_core.c>
		Require all denied
	</IfModule>
	<IfModule !mod_authz_core.c>
		Deny from all
	</IfModule>
</FilesMatch>
<FilesMatch "^\.[^/]*$">
	<IfModule mod_authz_core.c>
		Require all denied
	</IfModule>
	<IfModule !mod_authz_core.c>
		Deny from all
	</IfModule>
</FilesMatch>


# -----------------------------------------------------------------------------
# 6) EXPIRES / CACHING (DISABLED BY DEFAULT IN DEV)
#    WHY: Use only when you need to simulate cache behavior locally.
# -----------------------------------------------------------------------------
# <IfModule mod_expires.c>
# 	ExpiresActive on
# 	ExpiresDefault "access plus 0 seconds"
# </IfModule>


# -----------------------------------------------------------------------------
# 7) COMPRESSION (Brotli + Deflate + legacy mod_gzip)
#    WHY: Reduce payload size for text-based assets; keep enabled unless you
#         need to inspect raw responses while debugging.
# -----------------------------------------------------------------------------
<IfModule mod_brotli.c>
	AddOutputFilterByType BROTLI_COMPRESS text/plain
	AddOutputFilterByType BROTLI_COMPRESS text/html
	AddOutputFilterByType BROTLI_COMPRESS text/css
	AddOutputFilterByType BROTLI_COMPRESS text/javascript
	AddOutputFilterByType BROTLI_COMPRESS application/javascript
	AddOutputFilterByType BROTLI_COMPRESS application/json
	AddOutputFilterByType BROTLI_COMPRESS application/ld+json
	AddOutputFilterByType BROTLI_COMPRESS application/manifest+json
	AddOutputFilterByType BROTLI_COMPRESS application/xml
	AddOutputFilterByType BROTLI_COMPRESS application/xhtml+xml
	AddOutputFilterByType BROTLI_COMPRESS application/rss+xml
	AddOutputFilterByType BROTLI_COMPRESS image/svg+xml
</IfModule>

<IfModule mod_deflate.c>
	AddOutputFilterByType DEFLATE text/plain
	AddOutputFilterByType DEFLATE text/html
	AddOutputFilterByType DEFLATE text/css
	AddOutputFilterByType DEFLATE text/javascript
	AddOutputFilterByType DEFLATE text/xml
	AddOutputFilterByType DEFLATE application/javascript
	AddOutputFilterByType DEFLATE application/json
	AddOutputFilterByType DEFLATE application/ld+json
	AddOutputFilterByType DEFLATE application/manifest+json
	AddOutputFilterByType DEFLATE application/xml
	AddOutputFilterByType DEFLATE application/xhtml+xml
	AddOutputFilterByType DEFLATE application/rss+xml
	AddOutputFilterByType DEFLATE image/svg+xml
</IfModule>

<IfModule mod_gzip.c>
	mod_gzip_on Yes
	mod_gzip_dechunk Yes
	mod_gzip_item_include file \.(html?|txt|css|js|php|pl)$
	mod_gzip_item_include handler ^cgi-script$
	mod_gzip_item_include mime ^text/.*
	mod_gzip_item_include mime ^application/x-javascript.*
	mod_gzip_item_exclude mime ^image/.*
	mod_gzip_item_exclude rspheader ^Content-Encoding:.*gzip.*
</IfModule>


# -----------------------------------------------------------------------------
# 8) PROTECT SPECIFIC SENSITIVE FILE(S)
#    WHEN: Uncomment to explicitly deny a known file if you keep logs under /public.
#    NOTE: Prefer to store logs outside /public whenever possible.
# -----------------------------------------------------------------------------
# <Files "error_log.json">
# 	<IfModule mod_authz_core.c>Require all denied</IfModule>
# 	<IfModule !mod_authz_core.c>Deny from all</IfModule>
# </Files>


# -----------------------------------------------------------------------------
# 9) OPTIONAL PASSWORD PROTECTION (BASIC AUTH)
#    WHEN: Useful for non-public dev environments; combine with IP allowlists at the edge.
# -----------------------------------------------------------------------------
# <IfModule mod_auth_basic.c>
# 	AuthType Basic
# 	AuthName "Development site"
# 	AuthUserFile /path/to/.htpasswd
# 	Require valid-user
# </IfModule>


# -----------------------------------------------------------------------------
# 10) ENVIRONMENT IDENTIFICATION HEADERS
#     WHY: Quick verification for ops/dev tooling; mirror value in CDN/WAF if any.
# -----------------------------------------------------------------------------
<IfModule mod_headers.c>
	Header always set X-CitOmni-Env "dev"
	# Header always set X-CitOmni-Config "dev-2025-09-04-a1b2c3"
</IfModule>
